#!/usr/bin/env zsh

# Tmux integration
[[ -n $TMUX ]] && export FZF_TMUX=1
export FZF_TMUX_OPTS="--tmux=90%,90%"

# Default options
if [[ -f "$XDG_CONFIG_HOME/git/ignore" ]]; then
  FZF_COMMON_COMMAND="fd --hidden --follow "
  FZF_COMMON_COMMAND+="--ignore-file=$XDG_CONFIG_HOME/git/ignore "
  FZF_COMMON_COMMAND+="--exclude .git --strip-cwd-prefix"
else
  FZF_COMMON_COMMAND="fd --hidden --follow --exclude .git --strip-cwd-prefix"
fi
export FZF_COMMON_COMMAND
export FZF_LSD_LIST="--batch-size 1000 -X ${=MY_LS_CMD} -1 -d"
export FZF_LSD_PREVIEW="${=MY_TREE_CMD} -l ARG | head -n 1000"
export FZF_DEFAULT_COMMAND="${=FZF_COMMON_COMMAND} --type f ${=FZF_LSD_LIST}"
export FZF_DEFAULT_OPTS="\
  --color hl:reverse:bold,hl+:reverse:bold --highlight-line \
  --height=90% --ansi --reverse --info=inline --margin=1 --padding=1 \
  --tabstop=2 --border --border-label='[ Fuzzy Finder ]' \
  --color label:bright-cyan:italic --preview-label='[ Preview ]' \
  --color preview-label:bright-blue:italic \
  --bind 'ctrl-x:select-all+accept' \
  --bind 'ctrl-f:half-page-down,ctrl-b:half-page-up' \
  --bind 'ctrl-y:execute-silent(echo -n {+} | pbcopy)' \
  --bind 'ctrl-/:change-preview-window(down|hidden|)'"

# Catppuccin
FZF_DEFAULT_OPTS+=" \
  --color=bg+:#313244,bg:#1e1e2e,spinner:#f5e0dc,hl:#f38ba8 \
  --color=fg:#cdd6f4,header:#f38ba8,info:#cba6f7,pointer:#f5e0dc \
  --color=marker:#b4befe,fg+:#cdd6f4,prompt:#cba6f7,hl+:#f38ba8 \
  --color=selected-bg:#45475a \
  --multi"

# ALT-C options
export FZF_ALT_C_COMMAND="${=FZF_COMMON_COMMAND} --type d ${FZF_LSD_LIST}"
export FZF_ALT_C_OPTS="--preview '${FZF_LSD_PREVIEW/ARG/{2\}}'"

# CTRL-T options
export FZF_CTRL_T_COMMAND="$FZF_COMMON_COMMAND $FZF_LSD_LIST"
export FZF_CTRL_T_OPTS="\
  --preview 'if [[ -d {2} ]]; then ${FZF_LSD_PREVIEW/ARG/{2\}}
             else less {2}; fi'"

# CTRL-R completion
export FZF_CTRL_R_OPTS="\
  --preview 'echo {}' --preview-window up:3:hidden:wrap --header-first \
  --bind 'ctrl-y:execute-silent(echo -n {2..} | pbcopy)+abort' \
  --color header:bright-green:italic:underline \
  --header 'CTRL-y copies command into clipboard'"

# '**' completion
export FZF_COMPLETION_OPTS="\
  $FZF_DEFAULT_OPTS
  --preview 'if [[ -d {} ]]; then ${FZF_LSD_PREVIEW/ARG/{\}}
             else if [[ -f {} ]]; then less {}; fi; fi'"

# Directory completion
export FZF_COMPLETION_DIR_COMMANDS="cd pushd rmdir tree z zi"

# Path completion
_fzf_compgen_path() {
  echo "$1"
  ${=FZF_COMMON_COMMAND} --color=always "$1"
}

# Directory completion
_fzf_compgen_dir() {
  ${=FZF_COMMON_COMMAND} --type d --color=always "$1"
}

# Command expansion
_fzf_comprun() {
  local command=$1
  shift
  case "$command" in
    export | unset | printenv)
      # Needs to be fzf for this to work, tmux may have a different environment
      fzf --preview "eval 'echo \$'{}" "$@"
      ;;
    ssh) fzf ${FZF_TMUX_OPTS} --preview 'dig {}' "$@" ;;
    *)
      fzf ${FZF_TMUX_OPTS} -- "$@"
      ;;
  esac
}

_git_root_or_dot() {
  git rev-parse --show-toplevel 2>/dev/null || echo .
}

# Fuzzy explore with Neovim
fe() {
  local dir=""
  local query=""
  local fdopts=""
  local prg result
  local header='Enter on: file -> open in Neovim | dir: -> enter directory | '
  header+='alt-c: enter dirname    ctrl-/: change preview window'

  # Parse arguments
  while [[ $# -gt 0 ]]; do
    case "$1" in
      -q)
        query="$2"
        shift 2
        ;;
      -fdopts)
        fdopts="$2"
        shift 2
        ;;
      -*)
        echo "Error: Unknown flag provided: $1" >&2
        return 1
        ;;
      *)
        if [[ -n $dir ]]; then
          printf \
            "Error: multiple directories or invalid argument: %s\n" "$1" >&2
          return 1
        fi
        dir="$1"
        shift
        ;;
    esac
  done

  # Default directory to current if not provided
  [[ -z $dir ]] && dir="."

  while true; do
    if ! prg="\
      $(cd "$dir" && eval "$FZF_COMMON_COMMAND $fdopts . $FZF_LSD_LIST" \
      | fzf \
        --scheme path \
        --header "$header" \
        --query "$query" \
        --bind 'ctrl-/:change-preview-window(down|hidden|)' \
        --bind 'enter:become(printf "query=%q\nresult=%q\n" {q} {2})' \
        --bind "alt-c:become(printf \"result=%q\n\" \$(dirname {2}))" \
        --preview \
        "if [[ -d {2} ]]; then ${FZF_LSD_PREVIEW/ARG/{2\}}
         else less {2..}; fi")"; then
      return 1
    fi
    eval "$prg"
    [[ -z $result ]] && return
    result="${dir:+$dir/}$result"
    [[ -d $result ]] && {
      z "$result"
      return
    }
    [[ -f $result ]] && nvim "$result"
  done
}

# Fuzzy explore from Git root with Neovim
feg() {
  fe "$(_git_root_or_dot)"
}

# Find processes matched with FZF
fp() {
  local -r cmd="echo; ps -ef"
  : | fzf -m ${=FZF_TMUX_OPTS} --header-first --header 'CTRL-R reloads' \
    --color 'header:bright-green:italic:underline' \
    --bind "start:reload:$cmd" --bind "ctrl-r:reload:$cmd"
}

# fdr - find directory in reverse / cd to selected parent directory
fdr() {
  local dirs=()
  get_parent_dirs() {
    if [[ -d ${1} ]]; then
      dirs+=("$1")
    else
      return
    fi
    if [[ ${1} == '/' ]]; then
      for _dir in "${dirs[@]}"; do
        echo "$_dir"
      done
    else
      get_parent_dirs "$(dirname "$1")"
    fi
  }
  local dir
  # shellcheck disable=SC2046
  dir=$(${=MY_LS_CMD} -1 -U -d $(get_parent_dirs "$(realpath "${1:-$PWD}")") \
    | fzf-tmux --ansi --scheme=path --preview "${FZF_LSD_PREVIEW/ARG/{2\}}" \
    | cut -d' ' -f2-)
  z "$dir" || return
}

# Git completion with FZF

# Source Git completion help for FZF
if [[ -f "$XDG_CONFIG_HOME/zsh/fzf-git.sh" ]]; then
  source "$XDG_CONFIG_HOME/zsh/fzf-git.sh"
fi

# Reconfigure Git FZF function
_fzf_git_fzf() {
  fzf ${FZF_TMUX_OPTS} -m "$@" --preview-window 'right,50%,border-left' \
    --color 'label:bright-cyan:italic,preview-label:bright-blue:italic' \
    --color 'header:bright-green:italic:underline' \
    --ansi --bind='ctrl-/:change-preview-window(down,66%,border-top|hidden|)'
}

# FZF options for Zoxide
export _ZO_FZF_OPTS="\
  --height=90% --no-sort --reverse --no-multi --exit-0 --select-1 \
  --scheme=path --preview-window 'right,50%,border-left' \
  --bind 'ctrl-/:change-preview-window(down|hidden|)' \
  --preview '${FZF_LSD_PREVIEW/ARG/{2\}}' \
  --ansi --info=inline --margin=1 --padding=1 \
  --tabstop=2 --border --border-label='[ Fuzzy Finder ]' \
  --color label:bright-cyan:italic --preview-label='[ Preview ]' \
  --color preview-label:bright-blue:italic \
  --bind 'ctrl-f:half-page-down,ctrl-b:half-page-up' \
  --bind 'ctrl-y:execute-silent(echo -n {+} | pbcopy)'"

# Reconfigure FZF functions so we can use lsd (cutting out icons)

# CTRL-T - Paste the selected file path(s) into the command line
__fzf_select() {
  setopt localoptions pipefail no_aliases 2> /dev/null
  local item
  # MM: added cut command to remove icons
  FZF_DEFAULT_COMMAND=${FZF_CTRL_T_COMMAND:-} \
  FZF_DEFAULT_OPTS=$(__fzf_defaults "--reverse --walker=file,dir,follow,hidden --scheme=path" "${FZF_CTRL_T_OPTS-} -m") \
  FZF_DEFAULT_OPTS_FILE='' $(__fzfcmd) "$@" < /dev/tty | cut -d' ' -f2- \
  | while read -r item; do
    echo -n -E "${(q)item} "
  done
  local ret=$?
  echo
  return $ret
}

# ALT-C - cd into the selected directory
fzf-cd-widget() {
  setopt localoptions pipefail no_aliases 2> /dev/null
  local dir="$(FZF_DEFAULT_COMMAND=${FZF_ALT_C_COMMAND:-} FZF_DEFAULT_OPTS="--height ${FZF_TMUX_HEIGHT:-40%} --reverse --walker=dir,follow,hidden --scheme=path --bind=ctrl-z:ignore ${FZF_DEFAULT_OPTS-} ${FZF_ALT_C_OPTS-}" $(__fzfcmd) +m < /dev/tty)"
  # MM: added to drop icon
  dir="${dir#* }"
  if [[ -z "$dir" ]]; then
    zle redisplay
    return 0
  fi
  zle push-line # Clear buffer. Auto-restored on next prompt.
  # MM: replaced cd with z
  # BUFFER="builtin cd -- ${(q)dir:a}"
  BUFFER="z ${(q)dir:a}"
  zle accept-line
  local ret=$?
  unset dir # ensure this doesn't end up appearing in prompt expansion
  zle reset-prompt
  return $ret
}
